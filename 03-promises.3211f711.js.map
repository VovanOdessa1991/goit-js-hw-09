{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAiD7B,SAASJ,EAAcC,EAAUC,GAE/B,OAAO,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaL,KAAKC,SAAW,GAEpCE,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,YAGpBA,MApDMO,SAASC,cAAc,QAE/BC,iBAAiB,UAGtB,SAAgBC,GACdA,EAAMC,iBAKN,IAAIC,EAAQF,EAAMG,cAAcb,MAAMc,MAChCC,EAAOL,EAAMG,cAAcE,KAAKD,MAChCE,EAASN,EAAMG,cAAcG,OAAOF,MAE1CJ,EAAMG,cAAcG,OAAOF,MAAQ,KACnCJ,EAAMG,cAAcE,KAAKD,MAAQ,KACjCJ,EAAMG,cAAcb,MAAMc,MAAQ,KAKlC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IAGtCnB,EAAWmB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAG3DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,QAAQC,IAAI,sBAAqCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAE3DY,EAAQY,SAASZ,GAASY,SAAST,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst form = document.querySelector('form');\n\nform.addEventListener(\"submit\", submit);\n// form.preventDefault();\n\nfunction submit(event) {\n  event.preventDefault();\n  // console.log()\n  //  let {\n  //     elements: { delay= delay.value, step=step.value, amount= amount.value  }\n  //  } = event.currentTarget;\n  let delay = event.currentTarget.delay.value;\n  const step = event.currentTarget.step.value;\n  const amount = event.currentTarget.amount.value;\n\n  event.currentTarget.amount.value = null;\n  event.currentTarget.step.value = null;\n  event.currentTarget.delay.value = null;\n\n  \n  \n  // console.log(\"amount =>\", amount);\n  for (let position = 1; position <= amount; position++) {\n    // console.log(\"Шаг =>\", position);\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay = parseInt(delay) + parseInt(step);\n    // console.log(\"delay\", delay);\n  }\n  // console.log(\"test3\");\n  \n}\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n\n    }, delay);\n  });\n \n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","currentTarget","value","step","amount","position1","then","param","console","log","concat","catch","parseInt"],"version":3,"file":"03-promises.3211f711.js.map"}