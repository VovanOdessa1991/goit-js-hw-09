{"mappings":"AASaA,SAASC,cAAc,QAE/BC,iBAAiB,UAGtB,SAAgBC,GACdA,EAAMC,iBACNC,QAAQC,MAIR,IAAIC,EAAQJ,EAAMK,cAAcC,MAAMC,MAChCC,EAAOR,EAAMK,cAAcG,KAAKD,MAChCE,EAAST,EAAMK,cAAcI,OAAOF,MAI3CL,QAAQC,IAAI,YAAYM,GACvB,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAQC,IACzCR,QAAQC,IAAI,SAAYO,GAErBC,EAAWD,EAAUN,GACrBQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MAEjBJ,QAAQC,IAAI,uBAAwCY,OAAfD,EAAS,QAAYC,OAANT,EAAM,UAG7DU,OAAM,SAAAH,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MACpBJ,QAAQC,IAAI,sBAAqCY,OAAfD,EAAS,QAAYC,OAANT,EAAM,UAEvDF,EAAQa,SAASb,GAAQa,SAAST,GAClCN,QAAQC,IAAI,QAASC,GAOzB,SAASO,EAAcG,EAAUR,GAE/B,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUR,UAEpBc,EAAO,CAAEN,WAAUR,YAGpBA,MAhBLJ,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst form = document.querySelector('form');\n\nform.addEventListener(\"submit\", submit);\n// form.preventDefault();\n\nfunction submit(event) {\n  event.preventDefault();  \n  console.log()\n//  let {\n//     elements: { delay= delay.value, step=step.value, amount= amount.value  }\n//  } = event.currentTarget;\n  let delay = event.currentTarget.delay.value;\n  const step = event.currentTarget.step.value;\n  const amount = event.currentTarget.amount.value;\n\n  \n  \n console.log(\"amount =>\",amount );\n  for (let position = 1; position <= amount; position++){\n    console.log(\"Шаг =>\",position );\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) =>\n      {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n    .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay = parseInt(delay)+ parseInt(step);\n    console.log(\"delay\", delay);\n  }\n  console.log(\"test3\");\n  \n\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n\n    }, delay);\n  });\n \n}\n"],"names":["document","querySelector","addEventListener","event","preventDefault","console","log","delay1","currentTarget","delay","value","step","amount","position1","createPromise1","then","param","position","concat","catch","parseInt","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.a46da7bc.js.map"}